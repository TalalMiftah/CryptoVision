[{"/goinfre/tmiftah/ESTPFE/src/index.js":"1","/goinfre/tmiftah/ESTPFE/src/App.js":"2","/goinfre/tmiftah/ESTPFE/src/components/CurrencyConverter.js":"3","/goinfre/tmiftah/ESTPFE/src/components/index.js":"4","/goinfre/tmiftah/ESTPFE/src/components/Navbar.jsx":"5","/goinfre/tmiftah/ESTPFE/src/components/Cryptocurrencies.jsx":"6","/goinfre/tmiftah/ESTPFE/src/components/Homepage.jsx":"7","/goinfre/tmiftah/ESTPFE/src/components/News.jsx":"8"},{"size":263,"mtime":1709649783036,"results":"9","hashOfConfig":"10"},{"size":1453,"mtime":1709633509908,"results":"11","hashOfConfig":"10"},{"size":4075,"mtime":1709652577722,"results":"12","hashOfConfig":"10"},{"size":194,"mtime":1709633509910,"results":"13","hashOfConfig":"10"},{"size":1535,"mtime":1709649983889,"results":"14","hashOfConfig":"10"},{"size":3340,"mtime":1709651585300,"results":"15","hashOfConfig":"10"},{"size":848,"mtime":1709633509909,"results":"16","hashOfConfig":"10"},{"size":2647,"mtime":1709653009039,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"1iz977u",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/goinfre/tmiftah/ESTPFE/src/index.js",[],[],["44","45"],"/goinfre/tmiftah/ESTPFE/src/App.js",[],[],"/goinfre/tmiftah/ESTPFE/src/components/CurrencyConverter.js",["46","47"],[],"/goinfre/tmiftah/ESTPFE/src/components/index.js",[],[],"/goinfre/tmiftah/ESTPFE/src/components/Navbar.jsx",[],[],"/goinfre/tmiftah/ESTPFE/src/components/Cryptocurrencies.jsx",["48","49","50"],[],"import React, { useState, useEffect } from 'react'\r\nimport { Card, Row, Col, Input, Statistic } from 'antd'\r\nimport { ArrowUpOutlined, ArrowDownOutlined, LoadingOutlined } from '@ant-design/icons'\r\n\r\nconst Cryptocurrencies = ({ simplified }) => {\r\n  const count = simplified ? 10 : 100;\r\n  const [cryptosList, setcryptosList] = useState();\r\n  const [cryptos, setCryptos] = useState(cryptosList?.Data);\r\n  const [searchTerm, setSearchTerm] = useState('')\r\n  async function fetchData() {\r\n    const response = await fetch(`https://min-api.cryptocompare.com/data/top/totalvolfull?limit=${count}&tsym=USD&api_key={4b73109b800662283c6a16d23d897c1520f7f6a91ccb60a65f8136790f34f946}`);\r\n    const json = await response.json();\r\n    setcryptosList(json);\r\n  }; useEffect(fetchData, []);\r\n\r\n\r\n  useEffect(() => {\r\n    const filteredData = cryptosList?.Data.filter((coin) => coin.CoinInfo?.FullName.toLowerCase().includes(searchTerm.toLowerCase()));\r\n    setCryptos(filteredData);\r\n  }, [cryptosList, searchTerm]);\r\n\r\n  if (!cryptosList) return <LoadingOutlined />\r\n  return (\r\n    <>\r\n      {!simplified && (\r\n        <div className='search-crypto'>\r\n          <Input placeholder='Search Cryptocurrencie' onChange={(e) => setSearchTerm(e.target.value)} />\r\n        </div>\r\n      )}\r\n      <Row gutter={[32, 32]} className=\"crypto-card-container\">\r\n        {cryptos?.map((currency, index) => (\r\n          <Col\r\n            key={index}\r\n            xs={24}\r\n            sm={12}\r\n            lg={8}\r\n            className=\"crypto-card\"\r\n            >\r\n            <a href={`https://www.cryptocompare.com${currency?.CoinInfo?.Url}/USD`} target=\"_blank\" rel=\"noreferrer\">\r\n            <Card\r\n              title={`${currency?.CoinInfo?.FullName}`}\r\n              extra={<img className=\"crypto-image\" src={`https://www.cryptocompare.com${currency?.CoinInfo?.ImageUrl}`} />}\r\n              hoverable\r\n              style={{ borderRadius: \"10px\" }}\r\n            >\r\n              <Statistic value={(currency?.DISPLAY?.USD?.CHANGEPCTHOUR)} valueStyle={(currency?.DISPLAY?.USD?.CHANGEPCTHOUR) > 0 ? { color: '#3f8600' } : { color: '#cf1322' }} prefix={(currency?.DISPLAY?.USD?.CHANGEPCTHOUR) > 0 ? <ArrowUpOutlined /> : <ArrowDownOutlined />} suffix=\"%\" />\r\n              <p>Symbol : {(currency?.CoinInfo?.Name)} </p>\r\n              <p>Price : {(currency?.DISPLAY?.USD?.PRICE)} </p>\r\n              <p>Marcket cap : {(currency?.DISPLAY?.USD?.MKTCAP)} </p>\r\n              <p>Total Volume : {(currency?.DISPLAY?.USD?.VOLUME24HOURTO)} </p>\r\n              <p>Launch Date : {(currency?.CoinInfo?.AssetLaunchDate)} </p>\r\n              <p>Description :</p><Card style={{marginTop:'10px'}}>{currency?.CoinInfo?.FullName} or {currency?.CoinInfo?.Name} this currency was created in {currency?.CoinInfo?.AssetLaunchDate}, with max supply of {currency?.CoinInfo?.MaxSupply} coin and if you don't know the max supply is the maximum amount of coins that will ever exist in the lifetime of the cryptocurrency.\r\n                The miners get {currency?.CoinInfo?.BlockReward} {currency?.DISPLAY?.USD.FROMSYMBOL} if they successfully mine a block of the {currency?.CoinInfo?.FullName} today we have {currency?.DISPLAY?.USD.SUPPLY} .</Card>\r\n            </Card>\r\n            </a>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Cryptocurrencies\r\n","/goinfre/tmiftah/ESTPFE/src/components/Homepage.jsx",[],[],"/goinfre/tmiftah/ESTPFE/src/components/News.jsx",[],[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":27,"column":5,"nodeType":"57","endLine":36,"endColumn":6},{"ruleId":"55","severity":1,"message":"58","line":36,"column":28,"nodeType":"59","endLine":36,"endColumn":30,"suggestions":"60"},{"ruleId":"55","severity":1,"message":"56","line":10,"column":3,"nodeType":"57","endLine":14,"endColumn":4},{"ruleId":"55","severity":1,"message":"61","line":14,"column":27,"nodeType":"59","endLine":14,"endColumn":29,"suggestions":"62"},{"ruleId":"63","severity":1,"message":"64","line":42,"column":22,"nodeType":"65","endLine":42,"endColumn":123},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","FunctionDeclaration","React Hook useEffect has missing dependencies: 'amount', 'chosenPrimaryCurrency', and 'chosenSecondaryCurrency'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setExchangedData' needs the current value of 'chosenPrimaryCurrency'.","ArrayExpression",["68"],"React Hook useEffect has a missing dependency: 'count'. Either include it or remove the dependency array.",["69"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"70","fix":"71"},{"desc":"72","fix":"73"},"Update the dependencies array to be: [amount, chosenPrimaryCurrency, chosenSecondaryCurrency]",{"range":"74","text":"75"},"Update the dependencies array to be: [count]",{"range":"76","text":"77"},[1310,1312],"[amount, chosenPrimaryCurrency, chosenSecondaryCurrency]",[774,776],"[count]"]