{"ast":null,"code":"import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nconst cryptoApiHeaders = {\n  'x-rapidapi-host': process.env.REACT_APP_CRYPTO_RAPIDAPI_HOST,\n  'x-rapidapi-key': process.env.REACT_APP_RAPIDAPI_KEY\n};\n\nconst createRequest = url => ({\n  url,\n  headers: cryptoApiHeaders\n});\n\nexport const cryptoApi = createApi({\n  reducerPath: 'cryptoApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl: process.env.REACT_APP_CRYPTO_API_URL\n  }),\n  endpoints: builder => ({\n    getCryptos: builder.query({\n      query: count => createRequest(`/coins?limit=${count}`)\n    })\n  })\n});\nexport const {\n  useGetCryptosQuery\n} = cryptoApi;","map":{"version":3,"sources":["/goinfre/tmiftah/ESTPFE/src/services/cryptoApi.js"],"names":["createApi","fetchBaseQuery","cryptoApiHeaders","process","env","REACT_APP_CRYPTO_RAPIDAPI_HOST","REACT_APP_RAPIDAPI_KEY","createRequest","url","headers","cryptoApi","reducerPath","baseQuery","baseUrl","REACT_APP_CRYPTO_API_URL","endpoints","builder","getCryptos","query","count","useGetCryptosQuery"],"mappings":"AAAC,SAASA,SAAT,EAAoBC,cAApB,QAA0C,8BAA1C;AAED,MAAMC,gBAAgB,GAAG;AACrB,qBAAmBC,OAAO,CAACC,GAAR,CAAYC,8BADV;AAErB,oBAAkBF,OAAO,CAACC,GAAR,CAAYE;AAFT,CAAzB;;AAKA,MAAMC,aAAa,GAAIC,GAAD,KAAU;AAAEA,EAAAA,GAAF;AAAOC,EAAAA,OAAO,EAAEP;AAAhB,CAAV,CAAtB;;AAEA,OAAO,MAAMQ,SAAS,GAAGV,SAAS,CAAC;AAC/BW,EAAAA,WAAW,EAAE,WADkB;AAE/BC,EAAAA,SAAS,EAAEX,cAAc,CAAC;AAAEY,IAAAA,OAAO,EAAEV,OAAO,CAACC,GAAR,CAAYU;AAAvB,GAAD,CAFM;AAG/BC,EAAAA,SAAS,EAAGC,OAAD,KAAc;AACrBC,IAAAA,UAAU,EAAED,OAAO,CAACE,KAAR,CAAc;AACtBA,MAAAA,KAAK,EAAGC,KAAD,IAAWZ,aAAa,CAAE,gBAAeY,KAAM,EAAvB;AADT,KAAd;AADS,GAAd;AAHoB,CAAD,CAA3B;AASP,OAAO,MAAO;AAAEC,EAAAA;AAAF,IAAyBV,SAAhC","sourcesContent":[" import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\r\n\r\nconst cryptoApiHeaders = {\r\n    'x-rapidapi-host': process.env.REACT_APP_CRYPTO_RAPIDAPI_HOST,\r\n    'x-rapidapi-key': process.env.REACT_APP_RAPIDAPI_KEY,\r\n};\r\n\r\nconst createRequest = (url) => ({ url, headers: cryptoApiHeaders });\r\n\r\nexport const cryptoApi = createApi({\r\n    reducerPath: 'cryptoApi',\r\n    baseQuery: fetchBaseQuery({ baseUrl: process.env.REACT_APP_CRYPTO_API_URL }),\r\n    endpoints: (builder) => ({\r\n        getCryptos: builder.query({\r\n            query: (count) => createRequest(`/coins?limit=${count}`),\r\n        }),\r\n    }),\r\n});\r\nexport const  { useGetCryptosQuery } = cryptoApi"]},"metadata":{},"sourceType":"module"}