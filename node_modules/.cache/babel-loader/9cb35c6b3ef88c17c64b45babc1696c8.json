{"ast":null,"code":"var _jsxFileName = \"/goinfre/tmiftah/ESTPFE/src/components/CurrencyConverter.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { SwapOutlined } from '@ant-design/icons';\nimport { Input, Card } from 'antd';\nimport millify from 'millify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CurrencyConverter = () => {\n  _s();\n\n  const currencies = ['BTC', 'ETH', 'USD', 'XRP', 'LTC', 'ADA', 'JPY', 'NEO'];\n  const [chosenPrimaryCurrency, setChosenPrimaryCurrency] = useState('BTC');\n  const [chosenSecondaryCurrency, setChosenSecondaryCurrency] = useState('BTC');\n  const [amount, setAmount] = useState(1);\n  const [result, setResult] = useState(0);\n  const [exchangedData, setExchangedData] = useState({\n    primaryCurrency: 'BTC',\n    secondaryCurrency: 'BTC',\n    exchangeRate: 0\n  });\n\n  async function fetchData() {\n    const response = await fetch(`https://min-api.cryptocompare.com/data/price?fsym=${chosenPrimaryCurrency}&tsyms=${chosenSecondaryCurrency}&api_key={4b73109b800662283c6a16d23d897c1520f7f6a91ccb60a65f8136790f34f946}`);\n    const json = await response.json();\n    setResult(json[chosenSecondaryCurrency] * amount);\n    setExchangedData({\n      primaryCurrency: chosenPrimaryCurrency,\n      secondaryCurrency: chosenSecondaryCurrency,\n      exchangeRate: json[chosenSecondaryCurrency]\n    });\n  }\n\n  useEffect(fetchData, []);\n  console.log(amount);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"currency-converter\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cov\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          hoverable: true,\n          style: {\n            padding: \"10px\",\n            borderRadius: \"10px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"FROM\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"number\",\n            name: \"currency-amount-1\",\n            value: amount,\n            onChange: e => setAmount(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: chosenPrimaryCurrency,\n            name: \"currency-option-1\",\n            className: \"currency-options\",\n            onChange: e => setChosenPrimaryCurrency(e.target.value),\n            children: currencies.map((currency, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              children: currency\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 67\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SwapOutlined, {\n        className: \"covertb\",\n        id: \"convert-button\",\n        onClick: fetchData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cov\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          hoverable: true,\n          style: {\n            borderRadius: \"10px\",\n            padding: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"TO\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"currency-amount-2\",\n            value: result\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: chosenSecondaryCurrency,\n            name: \"currency-option-2\",\n            className: \"currency-options\",\n            onChange: e => setChosenSecondaryCurrency(e.target.value),\n            children: currencies.map((currency, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              children: currency\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 67\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"exchange-rate\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"excenter\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Exchange Rate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: millify(exchangedData.exchangeRate)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [exchangedData.primaryCurrency, \" to \", exchangedData.secondaryCurrency]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CurrencyConverter, \"kRQlq6fotkUFWZkA8aX9pnNALYU=\");\n\n_c = CurrencyConverter;\nexport default CurrencyConverter;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrencyConverter\");","map":{"version":3,"sources":["/goinfre/tmiftah/ESTPFE/src/components/CurrencyConverter.js"],"names":["useState","useEffect","SwapOutlined","Input","Card","millify","CurrencyConverter","currencies","chosenPrimaryCurrency","setChosenPrimaryCurrency","chosenSecondaryCurrency","setChosenSecondaryCurrency","amount","setAmount","result","setResult","exchangedData","setExchangedData","primaryCurrency","secondaryCurrency","exchangeRate","fetchData","response","fetch","json","console","log","padding","borderRadius","e","target","value","map","currency","index"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport { SwapOutlined } from '@ant-design/icons'\r\nimport { Input, Card } from 'antd'\r\nimport millify from 'millify'\r\nconst CurrencyConverter = () => {\r\n\r\n    const currencies = ['BTC', 'ETH', 'USD', 'XRP', 'LTC', 'ADA', 'JPY', 'NEO']\r\n\r\n    const [chosenPrimaryCurrency, setChosenPrimaryCurrency] = useState('BTC')\r\n\r\n    const [chosenSecondaryCurrency, setChosenSecondaryCurrency] = useState('BTC')\r\n\r\n    const [amount, setAmount] = useState(1)\r\n\r\n    const [result, setResult] = useState(0)\r\n\r\n\r\n    const [exchangedData, setExchangedData] = useState({\r\n\r\n        primaryCurrency: 'BTC',\r\n\r\n        secondaryCurrency: 'BTC',\r\n\r\n        exchangeRate: 0\r\n\r\n    })\r\n    async function fetchData() {\r\n        const response = await fetch(`https://min-api.cryptocompare.com/data/price?fsym=${chosenPrimaryCurrency}&tsyms=${chosenSecondaryCurrency}&api_key={4b73109b800662283c6a16d23d897c1520f7f6a91ccb60a65f8136790f34f946}`);\r\n        const json = await response.json();\r\n        setResult(json[chosenSecondaryCurrency] * amount);\r\n        setExchangedData({\r\n            primaryCurrency: chosenPrimaryCurrency,\r\n            secondaryCurrency: chosenSecondaryCurrency,\r\n            exchangeRate: json[chosenSecondaryCurrency],\r\n        })\r\n    } useEffect(fetchData, []);\r\n    console.log(amount)\r\n    return (\r\n        <div className=\"currency-converter\">\r\n            <div className='input-box'>\r\n                <div className='cov'>\r\n\r\n                    <Card\r\n                        hoverable\r\n                        style={\r\n                            { padding: \"10px\", borderRadius: \"10px\" }\r\n                        }\r\n                    >\r\n                        <h4>FROM</h4>\r\n                        <Input\r\n                            type=\"number\"\r\n                            name=\"currency-amount-1\"\r\n                            value={amount}\r\n                            onChange={(e) => setAmount(e.target.value)}\r\n                        />\r\n                        <select\r\n                            value={chosenPrimaryCurrency}\r\n                            name=\"currency-option-1\"\r\n                            className=\"currency-options\"\r\n                            onChange={(e) => setChosenPrimaryCurrency(e.target.value)}\r\n                        >\r\n                            {currencies.map((currency, index) => (<option>{currency}</option>))}\r\n                        </select>\r\n                    </Card>\r\n                </div>\r\n                <SwapOutlined className='covertb' id=\"convert-button\" onClick={fetchData}></SwapOutlined>\r\n                <div className='cov'>\r\n\r\n                    <Card\r\n                        hoverable\r\n                        style={\r\n                            { borderRadius: \"10px\", padding: '10px' }\r\n                        }\r\n                    >\r\n                        <h4>TO</h4>\r\n                        <Input\r\n                            name=\"currency-amount-2\"\r\n                            value={result}\r\n                        />\r\n                        <select\r\n                            value={chosenSecondaryCurrency}\r\n                            name=\"currency-option-2\"\r\n                            className=\"currency-options\"\r\n                            onChange={(e) => setChosenSecondaryCurrency(e.target.value)}\r\n                        >\r\n                            {currencies.map((currency, index) => (<option>{currency}</option>))}\r\n                        </select>\r\n                    </Card>\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"exchange-rate\">\r\n                <Card>\r\n                    <div className=\"excenter\">\r\n                        <h1>Exchange Rate</h1>\r\n                        <h2>{millify(exchangedData.exchangeRate)}</h2>\r\n                        <p  >{exchangedData.primaryCurrency} to {exchangedData.secondaryCurrency}</p>\r\n                    </div>\r\n                </Card>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default CurrencyConverter\r\n"]},"metadata":{},"sourceType":"module"}